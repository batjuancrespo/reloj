name: Scrape Sports News

on:
  # Ejecuta el script cada 15 minutos
  schedule:
    - cron: '*/15 * * * *'
  # Permite ejecutarlo manualmente desde la pesta√±a "Actions" de GitHub
  workflow_dispatch:

jobs:
  scrape:
    # --- CORRECCI√ìN APLICADA AQU√ç ---
    # Concedemos permisos de escritura al workflow para que pueda hacer 'push'
    permissions:
      contents: write
    # ------------------------------------
    
    runs-on: ubuntu-latest
    steps:
      # 1. Clona tu repositorio en la m√°quina virtual
      - name: Check out repository
        uses: actions/checkout@v4

      # 2. Configura el entorno de Python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      # 3. Instala las librer√≠as necesarias
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
      # 4. Instala Google Chrome (necesario para Selenium headless)
      - name: Install Google Chrome
        run: |
          sudo apt-get update
          sudo apt-get install -y google-chrome-stable

      # 5. Ejecuta tu script de Python para generar titulares.json
      - name: Run Python Scraper
        run: python scraper_deportivo.py

      # 6. Sube el nuevo archivo titulares.json al repositorio
      - name: Commit and push if there are changes
        run: |
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions@github.com"
          git add titulares.json
          # Comprueba si hay cambios antes de hacer commit para evitar errores
          git diff-index --quiet HEAD || git commit -m "üì∞ Update sports headlines"
          git push
